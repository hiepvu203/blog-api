{
	"info": {
		"_postman_id": "c9566131-498c-445d-a59e-6ec1c23a71c8",
		"name": "BLOG-API",
		"description": "RESTful API for a blogging platform built with Golang and Gin. Provides endpoints for user authentication, post management, category management, and comment features. Supports JWT authentication, role-based access control, and pagination.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27112511"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "get list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {\r",
											"    pm.expect(pm.response.code).to.equal(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the schema of the response\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"\r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData).to.have.all.keys('data', 'message', 'page', 'page_size', 'success', 'total');\r",
											"\r",
											"    pm.expect(responseData.data).to.be.an('array');\r",
											"    responseData.data.forEach(user => {\r",
											"        pm.expect(user).to.be.an('object');\r",
											"        pm.expect(user).to.have.all.keys('id', 'username', 'email', 'role');\r",
											"        pm.expect(user.id).to.be.a('number');\r",
											"        pm.expect(user.username).to.be.a('string');\r",
											"        pm.expect(user.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);\r",
											"        pm.expect(user.role).to.be.a('string');\r",
											"    });\r",
											"\r",
											"    pm.expect(responseData.message).to.be.a('string');\r",
											"    pm.expect(responseData.page).to.be.a('number');\r",
											"    pm.expect(responseData.page_size).to.be.a('number');\r",
											"    pm.expect(responseData.success).to.be.a('boolean');\r",
											"    pm.expect(responseData.total).to.be.a('number');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Ensure 'success' field is true\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.success).to.be.true;\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response is successful and data is an array with required fields\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.success).to.be.true;\r",
											"    pm.expect(responseData.data).to.be.an('array');\r",
											"\r",
											"    responseData.data.forEach(function(user) {\r",
											"        pm.expect(user).to.be.an('object');\r",
											"        pm.expect(user).to.have.all.keys('id', 'username', 'email', 'role');\r",
											"    });\r",
											"});\r",
											"var responseData = pm.response.json();\r",
											"\r",
											"// Test to ensure the length of the data array is greater than 0\r",
											"pm.test(\"The length of the data array must be greater than zero\", function () {\r",
											"    pm.expect(responseData.data.length).to.be.greaterThan(0, \"Data array should not be empty\");\r",
											"});\r",
											"var template = `\r",
											"<style type=\"text/css\">\r",
											"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
											"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
											"    .tftable tr {background-color:#ffffff;}\r",
											"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
											"    .tftable tr:hover {background-color:#e0ffff;}\r",
											"</style>\r",
											"\r",
											"<table class=\"tftable\" border=\"1\">\r",
											"    <tr>\r",
											"        <th>ID</th>\r",
											"        <th>Username</th>\r",
											"        <th>Email</th>\r",
											"        <th>Role</th>\r",
											"    </tr>\r",
											"    \r",
											"    {{#each response.data}}\r",
											"        <tr>\r",
											"            <td>{{id}}</td>\r",
											"            <td>{{username}}</td>\r",
											"            <td>{{email}}</td>\r",
											"            <td>{{role}}</td>\r",
											"        </tr>\r",
											"    {{/each}}\r",
											"</table>\r",
											"`;\r",
											"\r",
											"function constructVisualizerPayload() {\r",
											"    return {response: pm.response.json()};\r",
											"}\r",
											"\r",
											"pm.visualizer.set(template, constructVisualizerPayload());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/admin/users",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"users"
									]
								},
								"description": "## Get Users\n\nThis endpoint retrieves a list of users from the admin section of the application. It provides details about each user, including their ID, username, email, and role.\n\n### Request\n\n- **Method**: GET\n    \n- **URL**: `http://localhost:9090/admin/users`\n    \n\n### Response\n\nThe response will be a JSON object containing the following fields:\n\n- **data**: An array of user objects, where each object includes:\n    \n    - **id**: The unique identifier for the user.\n        \n    - **username**: The username of the user.\n        \n    - **email**: The email address of the user.\n        \n    - **role**: The role assigned to the user.\n        \n- **message**: A string that may contain additional information about the request.\n    \n- **page**: The current page number of the results.\n    \n- **page_size**: The number of results per page.\n    \n- **success**: A boolean indicating whether the request was successful.\n    \n- **total**: The total number of users available.\n    \n\n### Notes\n\n- Ensure that you have the necessary permissions to access this endpoint, as it is part of the admin functionality.\n    \n- The response structure allows for pagination, which can be useful for managing large sets of user data."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:40:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "474"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 8,\n            \"username\": \"hiep03\",\n            \"email\": \"vuxuanhiep1709@gmail.com\",\n            \"role\": \"client\"\n        },\n        {\n            \"id\": 6,\n            \"username\": \"testuser01\",\n            \"email\": \"test@example.com\",\n            \"role\": \"client\"\n        },\n        {\n            \"id\": 4,\n            \"username\": \"testuser\",\n            \"email\": \"test123@example.com\",\n            \"role\": \"admin\"\n        },\n        {\n            \"id\": 1,\n            \"username\": \"admin\",\n            \"email\": \"admin@example.com\",\n            \"role\": \"admin\"\n        },\n        {\n            \"id\": 2,\n            \"username\": \"johndoe\",\n            \"email\": \"john@example.com\",\n            \"role\": \"admin\"\n        }\n    ],\n    \"message\": \"Users fetched successfully.\",\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 5\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:45:52 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:46:42 GMT"
										},
										{
											"key": "Content-Length",
											"value": "25"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (not admin)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTM2MDAsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.Jj22qyEnKYKEo_5zDCWV_2Z7ByLDTrxcSNcKfJpbB_4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:48:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "33"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Admin access required\"\n}"
								},
								{
									"name": "error (invalid page)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users?page=a",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											],
											"query": [
												{
													"key": "page",
													"value": "a"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:48:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "50"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid page parameter\"\n}"
								},
								{
									"name": "error (invalid page_size)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users?page_size=-1",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users"
											],
											"query": [
												{
													"key": "page_size",
													"value": "-1"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:49:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "55"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid page_size parameter\"\n}"
								}
							]
						},
						{
							"name": "change role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains the key 'success'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object').that.has.property('success');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Validate the structure of the response against the expected JSON schema\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData).to.have.all.keys('success', 'data');\r",
											"    pm.expect(responseData.success).to.be.a('boolean');\r",
											"    pm.expect(responseData.data).to.be.an('object');\r",
											"    pm.expect(responseData.data).to.have.all.keys('message');\r",
											"    pm.expect(responseData.data.message).to.be.a('string');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response body contains the key 'data'\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    pm.expect(responseData).to.have.property('data');\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The message field must be a string\", function () {\r",
											"    const responseData = pm.response.json();\r",
											"    \r",
											"    pm.expect(responseData).to.be.an('object');\r",
											"    pm.expect(responseData.data).to.exist;\r",
											"    pm.expect(responseData.data.message).to.exist.and.to.be.a('string');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"role\": \"admin\" }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/admin/users/6/role",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"users",
										"6",
										"role"
									]
								},
								"description": "### Update User Role\n\nThis endpoint allows you to update the role of a specific user identified by their unique ID. The request modifies the user's role in the system to the specified value.\n\n#### Request\n\n- **Method**: PUT\n    \n- **URL**: `http://localhost:9090/admin/users/{userId}/role`\n    \n\n##### Request Body\n\nThe request body must be in JSON format and should contain the following parameter:\n\n- **role** (string): The new role to assign to the user. For example, `\"admin\"`.\n    \n\n#### Response\n\nUpon a successful update, the response will return a JSON object with the following structure:\n\n- **success** (boolean): Indicates whether the operation was successful.\n    \n- **data** (object): Contains additional information about the operation.\n    \n    - **message** (string): A message providing further details about the operation (can be empty).\n        \n\n##### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\nUse this endpoint to efficiently manage user roles within your application."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:55:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "55"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"User role updated\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:59:51 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:00:40 GMT"
										},
										{
											"key": "Content-Length",
											"value": "25"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (not admin)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTM2MDAsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.Jj22qyEnKYKEo_5zDCWV_2Z7ByLDTrxcSNcKfJpbB_4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:01:48 GMT"
										},
										{
											"key": "Content-Length",
											"value": "33"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Admin access required\"\n}"
								},
								{
									"name": "error (invalid user id)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/abc/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"abc",
												"role"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:03:09 GMT"
										},
										{
											"key": "Content-Length",
											"value": "43"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid user id\"\n}"
								},
								{
									"name": "error (no value)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:04:21 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'Role' Error:Field validation for 'Role' failed on the 'required' tag\"\n}"
								},
								{
									"name": "error (value is incorrect)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"abc\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/6/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"6",
												"role"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:05:37 GMT"
										},
										{
											"key": "Content-Length",
											"value": "99"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'Role' Error:Field validation for 'Role' failed on the 'oneof' tag\"\n}"
								},
								{
									"name": "error (user not found)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MDc5MTEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmASocYH_GSUMQLYK1qj05FTveTJFjGoBife1TujUSI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \"role\": \"admin\" }",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/users/3/role",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"3",
												"role"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:06:45 GMT"
										},
										{
											"key": "Content-Length",
											"value": "42"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"user not found\"\n}"
								}
							]
						},
						{
							"name": "delete user",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTg3OTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.wszw4EDNQt96ZDukiNe-wYEiua7JqrO4hI17yV9aptg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "localhost:9090/admin/users/2",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"users",
										"2"
									]
								},
								"description": "### DELETE /admin/users/{id}\n\nThis endpoint is used to delete a user from the system by their unique identifier (ID). When a DELETE request is made to this endpoint, it will remove the specified user from the database.\n\n#### Request Parameters\n\n- **id** (path parameter): The unique identifier of the user to be deleted. In this example, the ID is `2`.\n    \n\n#### Response Structure\n\nUpon a successful deletion, the response will be in JSON format and will contain the following fields:\n\n- **success** (boolean): Indicates whether the deletion was successful.\n    \n- **data** (object): Contains additional information regarding the deletion.\n    \n    - **message** (string): A message confirming the deletion. This may be an empty string.\n        \n\n#### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\nThis response signifies that the user with the specified ID has been successfully deleted from the system."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTg3OTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.wszw4EDNQt96ZDukiNe-wYEiua7JqrO4hI17yV9aptg",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/users/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:40:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"User deleted successfully\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/users/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"2"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:41:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTg3ksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.wszw4EDNQt96ZDukiNe-wYEiua7JqrO4hI17yV9aptg",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/users/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"2"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:42:25 GMT"
										},
										{
											"key": "Content-Length",
											"value": "25"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (not admin)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTM2MDAsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.Jj22qyEnKYKEo_5zDCWV_2Z7ByLDTrxcSNcKfJpbB_4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/users/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:42:59 GMT"
										},
										{
											"key": "Content-Length",
											"value": "33"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Admin access required\"\n}"
								},
								{
									"name": "error (not found user)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTg3OTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.wszw4EDNQt96ZDukiNe-wYEiua7JqrO4hI17yV9aptg",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/users/ac",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"ac"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 09:43:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "43"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid user id\"\n}"
								}
							]
						},
						{
							"name": "get detail",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:9090/admin/users/8",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"users",
										"8"
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.4-8f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/users/8",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"8"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:00:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "179"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"comment_count\": 0,\n        \"created_at\": \"2025-06-18T11:28:43.880466Z\",\n        \"email\": \"vuxuanhiep1709@gmail.com\",\n        \"id\": 8,\n        \"post_count\": 6,\n        \"role\": \"client\",\n        \"username\": \"hiep03\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/users/8",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"8"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:01:20 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTUxNzMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR98f2TiLAFY87kS6cFl1a8tg0hpV8ByM9uMcjl4aWLM",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/users/8",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"users",
												"8"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:01:49 GMT"
										},
										{
											"key": "Content-Length",
											"value": "25"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Invalid token\"\n}"
								}
							]
						}
					],
					"description": "Endpoints for user-related actions such as registration, login, profile retrieval, password change, and self-deletion. Includes both public and authenticated routes for managing user accounts and accessing personal information."
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "add",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTAyNjYsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmaEcreM17FDHXbYemAsWCOmcgAoteqQLGUWKDsWgNw",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Giải trí\",\r\n  \"slug\": \"giai-tri\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/admin/categories",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTAyNjYsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmaEcreM17FDHXbYemAsWCOmcgAoteqQLGUWKDsWgNw",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Giải trí\",\r\n  \"slug\": \"giai-tri\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:09:45 GMT"
										},
										{
											"key": "Content-Length",
											"value": "67"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Category created successfully\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Giải trí\",\r\n  \"slug\": \"giai-tri\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:10:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (not admin)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTM2MDAsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.Jj22qyEnKYKEo_5zDCWV_2Z7ByLDTrxcSNcKfJpbB_4",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Giải trí\",\r\n  \"slug\": \"giai-tri\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:11:01 GMT"
										},
										{
											"key": "Content-Length",
											"value": "33"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Admin access required\"\n}"
								},
								{
									"name": "error (no value)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTAyNjYsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmaEcreM17FDHXbYemAsWCOmcgAoteqQLGUWKDsWgNw",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"\",\r\n  \"slug\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:12:11 GMT"
										},
										{
											"key": "Content-Length",
											"value": "222"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'CreateCategoryRequest.Name' Error:Field validation for 'Name' failed on the 'required' tag\\nKey: 'CreateCategoryRequest.Slug' Error:Field validation for 'Slug' failed on the 'required' tag\"\n}"
								},
								{
									"name": "error (dupplicate slug)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTAyNjYsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.ZmaEcreM17FDHXbYemAsWCOmcgAoteqQLGUWKDsWgNw",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Giải trí\",\r\n  \"slug\": \"giai-tri\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 10:14:49 GMT"
										},
										{
											"key": "Content-Length",
											"value": "122"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"ERROR: duplicate key value violates unique constraint \\\"categories_slug_key\\\" (SQLSTATE 23505)\"\n}"
								}
							]
						},
						{
							"name": "update",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"kien-thuc-cong-nghe\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/admin/categories/1",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"categories",
										"1"
									]
								},
								"description": "## Update Category\n\nThis endpoint allows you to update an existing category in the system. The category is identified by its unique ID, which is included in the URL path.\n\n### Request\n\n- **Method:** PUT\n    \n- **URL:** `http://localhost:9090/admin/categories/{id}`\n    \n\n#### Request Body\n\nThe request body must be in JSON format and should contain the following parameters:\n\n- `name` (string): The name of the category you wish to update.\n    \n- `slug` (string): A URL-friendly version of the category name, typically in lowercase and with hyphens instead of spaces.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"name\": \"Công nghệ\",\n  \"slug\": \"kien-thuc-cong-nghe\"\n}\n\n ```\n\n### Response\n\nThe response will be in JSON format and will indicate the success of the operation. The structure of the response is as follows:\n\n- `success` (boolean): Indicates whether the update operation was successful.\n    \n- `data` (object): Contains additional information about the operation.\n    \n    - `message` (string): A message providing further details about the operation (may be empty).\n        \n\n**Example Response:**\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the category ID in the URL corresponds to an existing category; otherwise, the update will fail.\n    \n- The response will confirm the success of the operation, allowing the client to handle the result accordingly."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"cong-nghe\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/admin/categories/1",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"1"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:31:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "67"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Category updated successfully\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"cong-nghe\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/admin/categories/1",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"1"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:31:50 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksIbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"cong-nghe\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/admin/categories/1",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"1"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:32:15 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (category not found)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"cong-nghe\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/admin/categories/10",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"10"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:38:58 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Category not found\"\n}"
								},
								{
									"name": "error (invalid category id)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Công nghệ\",\r\n  \"slug\": \"cong-nghe\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/admin/categories/a",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"a"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:39:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "47"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid category id\"\n}"
								}
							]
						},
						{
							"name": "delete",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "localhost:9090/admin/categories/5",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"categories",
										"5"
									]
								},
								"description": "## Delete Category\n\nThis endpoint is used to delete a specific category from the system.\n\n### Request\n\n- **Method**: DELETE\n    \n- **Endpoint**: `/admin/categories/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (required): The unique identifier of the category to be deleted. In this example, the category ID is `5`.\n        \n\n### Response\n\nUpon a successful deletion, the API will return a JSON response with the following structure:\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n- **success**: A boolean indicating whether the deletion was successful.\n    \n- **data**: An object containing additional information. In this case, it includes a message, which may be empty.\n    \n\n### Notes\n\n- Ensure that the category ID provided in the request corresponds to an existing category in the system.\n    \n- If the deletion is successful, the response will confirm the action with a success status."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/categories/5",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"5"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:41:45 GMT"
										},
										{
											"key": "Content-Length",
											"value": "67"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Category deleted successfully\"\n    }\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/categories/5",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"5"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:42:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/categories/5",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"5"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:42:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (category not found)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/categories/100",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"100"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:43:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Category not found\"\n}"
								},
								{
									"name": "error (invalid category id)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTA5NjksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.GzaiXAl229vm3RFCvq0fejJIlPAGKZ6VYwBPwp4751k",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "localhost:9090/admin/categories/aâaa",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories",
												"aâaa"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 02:43:39 GMT"
										},
										{
											"key": "Content-Length",
											"value": "47"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid category id\"\n}"
								}
							]
						},
						{
							"name": "get list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0NzkwNzQsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.PWKoTaNdJ4JcizOOS5F1UP1mDoCFmvvBsls8OQAzDhY",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:9090/admin/categories",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"categories"
									]
								},
								"description": "### Endpoint Description\n\nThis endpoint retrieves a list of categories from the admin section of the application. It is designed to provide information about each category, including its identifier, name, slug, post count, and associated posts.\n\n### Request Format\n\n- **Method**: GET\n    \n- **URL**: `http://localhost:9090/admin/categories`\n    \n- **Request Body**: No request body is required for this GET request.\n    \n\n### Expected Response Format\n\nOn a successful request, the server responds with a JSON object containing the following structure:\n\n- **success**: A boolean indicating the success of the request.\n    \n- **data**: An array of category objects, where each object contains:\n    \n    - **id**: The unique identifier for the category.\n        \n    - **name**: The name of the category.\n        \n    - **slug**: A URL-friendly version of the category name.\n        \n    - **post_count**: The number of posts associated with the category.\n        \n    - **posts**: An array of post objects, where each object contains:\n        \n        - **id**: The unique identifier for the post.\n            \n        - **title**: The title of the post.\n            \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"slug\": \"\",\n      \"post_count\": 0,\n      \"posts\": [\n        {\n          \"id\": 0,\n          \"title\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\nThis response indicates that the request was successful and provides the relevant data about the categories."
							},
							"response": [
								{
									"name": "error (not found route)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:08:38 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Endpoint not found\"\n}"
								},
								{
									"name": "unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:09:44 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}\n\n// không gửi token"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0NzkwNzQsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.PWKoTaNdJ4JcizOOS5F1UP1mDoCFmvvBsls8OQAzDhY",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:11:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "371"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"Lập trình\",\n            \"slug\": \"lap-trinh\",\n            \"post_count\": 1,\n            \"posts\": [\n                {\n                    \"id\": 2,\n                    \"title\": \"Lập trình Go cơ bản\"\n                }\n            ]\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Đời sống\",\n            \"slug\": \"doi-song\",\n            \"post_count\": 0,\n            \"posts\": null\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Công nghệ\",\n            \"slug\": \"kien-thuc-cong-nghe\",\n            \"post_count\": 1,\n            \"posts\": [\n                {\n                    \"id\": 4,\n                    \"title\": \"Hướng dẫn sử dụng Golang với Gin\"\n                }\n            ]\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "posts",
					"item": [
						{
							"name": "delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMzEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:9090/admin/posts/15",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"admin",
										"posts",
										"15"
									]
								},
								"description": "## DELETE /admin/posts/{id}\n\nThis endpoint is used to delete a specific post identified by its unique ID. In this case, the post with ID `15` is being targeted for deletion.\n\n### Request Body\n\nThis DELETE request does not require a request body.\n\n### Response Format\n\nUpon successful deletion of the post, the API will return a JSON response with the following structure:\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n- `success`: A boolean indicating whether the deletion was successful.\n    \n- `data`: An object containing additional information about the deletion. In this case, it includes a `message` field which may provide further context, but it is typically empty."
							},
							"response": [
								{
									"name": "error (endpoint not found)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMzEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/post/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"post",
												"15"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:06:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Endpoint not found\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMzEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/posts/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"posts",
												"15"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:07:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Post deleted successfully\"\n    }\n}"
								},
								{
									"name": "error (post not found)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMzEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/posts/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"posts",
												"15"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:07:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "42"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Post not found\"\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/posts/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"posts",
												"15"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:07:58 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/posts/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"posts",
												"15"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:08:22 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (not admin)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1MjM5MTksInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo5fQ.zwB_D2xIYhgq-ioyd1pchG93j_WvMQbcku_WMRXL010",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/admin/posts/15",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"admin",
												"posts",
												"15"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:08:56 GMT"
										},
										{
											"key": "Content-Length",
											"value": "49"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Admin access required\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "LOGIN ADMIN",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test123@example.com\",\r\n    \"password\": \"234567\"\r\n}"
						},
						"url": {
							"raw": "localhost:9090/users/login",
							"host": [
								"localhost"
							],
							"port": "9090",
							"path": [
								"users",
								"login"
							]
						},
						"description": "## Login User\n\nThis endpoint allows users to authenticate themselves by logging in with their credentials. Upon successful authentication, the server returns a token that can be used for subsequent requests, along with user details.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `/users/login`\n\n#### Request Body\n\nThe request body must be in JSON format and contain the following parameters:\n\n- **email** (string): The email address of the user attempting to log in.\n    \n- **password** (string): The password associated with the user's account.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"email\": \"test123@example.com\",\n  \"password\": \"234567\"\n}\n\n ```\n\n### Response\n\nThe response will be in JSON format and contains the following structure:\n\n- **success** (boolean): Indicates whether the login was successful.\n    \n- **data** (object): Contains the following fields:\n    \n    - **token** (string): A token that can be used for authenticated requests.\n        \n    - **user** (object): Contains user details, including:\n        \n        - **email** (string): The email of the authenticated user.\n            \n        - **id** (integer): The unique identifier of the user.\n            \n        - **role** (string): The role of the user within the system.\n            \n\n**Example Response:**\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"token\": \"your_token_here\",\n    \"user\": {\n      \"email\": \"test123@example.com\",\n      \"id\": 1,\n      \"role\": \"admin\"\n    }\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the email and password provided in the request body are correct to receive a successful response.\n    \n- The token returned should be securely stored and used for future authenticated requests."
					},
					"response": [
						{
							"name": "success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test123@example.com\",\r\n    \"password\": \"234567\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:00:31 GMT"
								},
								{
									"key": "Content-Length",
									"value": "238"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjEyMzEsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.l-u8xIYpfUDlgN7fE3jmpWcRe8G2qJhrbw9Egxf2ugg\",\n        \"user\": {\n            \"email\": \"test123@example.com\",\n            \"id\": 4,\n            \"role\": \"admin\"\n        }\n    }\n}"
						},
						{
							"name": "error (pass incorrect)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test123@example.com\",\r\n    \"password\": \"12\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:01:20 GMT"
								},
								{
									"key": "Content-Length",
									"value": "47"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"password is invalid\"\n}"
						},
						{
							"name": "errror (email incorrect)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"te@example.com\",\r\n    \"password\": \"234567\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:01:56 GMT"
								},
								{
									"key": "Content-Length",
									"value": "44"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"email is invalid\"\n}"
						},
						{
							"name": "error (email required)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"234567\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:02:39 GMT"
								},
								{
									"key": "Content-Length",
									"value": "104"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'Email' Error:Field validation for 'Email' failed on the 'required' tag\"\n}"
						},
						{
							"name": "error (pass required)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"sdf@gmail.com\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:04:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "110"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'Password' Error:Field validation for 'Password' failed on the 'required' tag\"\n}"
						},
						{
							"name": "error (email/pass required)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 19 Jun 2025 03:04:46 GMT"
								},
								{
									"key": "Content-Length",
									"value": "188"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'Email' Error:Field validation for 'Email' failed on the 'required' tag\\nKey: 'Password' Error:Field validation for 'Password' failed on the 'required' tag\"\n}"
						}
					]
				}
			],
			"description": "Endpoints for administrative operations. Allows admin users to manage all users, posts, and categories, including listing, updating roles, and deleting resources. Access to these endpoints requires admin privileges and authentication."
		},
		{
			"name": "user",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "register",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"xhiep\",\r\n    \"email\": \"hiep123@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/users/register",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"register"
									]
								},
								"description": "### User Registration Endpoint\n\nThis endpoint allows new users to register by providing their username, email, and password. Upon successful registration, the server responds with a success status and user details.\n\n#### Request\n\n- **Method**: POST\n    \n- **URL**: `http://localhost:9090/users/register`\n    \n\n##### Request Body\n\nThe request body must be in JSON format and include the following parameters:\n\n- `username` (string): The desired username for the new account.\n    \n- `email` (string): The email address associated with the account.\n    \n- `password` (string): The password for the account.\n    \n\n**Example Request Body**:\n\n``` json\n{\n  \"username\": \"exampleUser\",\n  \"email\": \"user@example.com\",\n  \"password\": \"securePassword123\"\n}\n\n ```\n\n#### Response\n\nOn a successful registration, the server responds with a JSON object that includes:\n\n- `success` (boolean): Indicates whether the registration was successful.\n    \n- `data` (object): Contains user details:\n    \n    - `email` (string): The email address provided during registration.\n        \n    - `id` (integer): The unique identifier assigned to the user.\n        \n    - `username` (string): The username chosen by the user.\n        \n\n**Example Response**:\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"email\": \"user@example.com\",\n    \"id\": 1,\n    \"username\": \"exampleUser\"\n  }\n}\n\n ```\n\n#### Notes\n\n- Ensure that the username and email are unique to avoid registration conflicts.\n    \n- The password should meet security standards to ensure account safety."
							},
							"response": [
								{
									"name": "error (password)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"testuser01\",\r\n    \"email\": \"test@example.com\",\r\n    \"password\": \"12345\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/register",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:22:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "67"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Password must be at least 6 characters.\"\n}"
								},
								{
									"name": "error (dupplicate email)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"testuser01\",\r\n    \"email\": \"test@example.com\",\r\n    \"password\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/register",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"register"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:23:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "48"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"email already exists\"\n}"
								},
								{
									"name": "error (dupplicate username)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"testuser01\",\r\n    \"email\": \"vuxuanhiep1709@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/register",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"register"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:27:33 GMT"
										},
										{
											"key": "Content-Length",
											"value": "51"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"username already exists\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"username\": \"hiep03\",\r\n    \"email\": \"vuxuanhiep1709@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/register",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"register"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:28:43 GMT"
										},
										{
											"key": "Content-Length",
											"value": "87"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"email\": \"vuxuanhiep1709@gmail.com\",\n        \"id\": 8,\n        \"username\": \"hiep03\"\n    }\n}"
								}
							]
						},
						{
							"name": "login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1MjM5MTksInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo5fQ.zwB_D2xIYhgq-ioyd1pchG93j_WvMQbcku_WMRXL010",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"test123@example.com\",\r\n    \"password\": \"234567\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/users/login",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"login"
									]
								},
								"description": "### Login User\n\nThis endpoint allows users to log in to the application by providing their credentials. Upon successful authentication, the server responds with a token and user details.\n\n#### Request\n\n- **Method:** POST\n    \n- **URL:** `http://localhost:9090/users/login`\n    \n\n##### Request Body\n\nThe request body must be in JSON format and should contain the following parameters:\n\n- `email` (string): The email address of the user attempting to log in.\n    \n- `password` (string): The password associated with the user's account.\n    \n\n**Example:**\n\n``` json\n{\n  \"email\": \"user@example.com\",\n  \"password\": \"yourpassword\"\n}\n\n ```\n\n#### Response\n\nThe response will be in JSON format and will contain the following structure:\n\n- `success` (boolean): Indicates whether the login was successful.\n    \n- `data` (object): Contains the following fields:\n    \n    - `token` (string): A token that can be used for authenticated requests.\n        \n    - `user` (object): Contains user details, including:\n        \n        - `email` (string): The email of the logged-in user.\n            \n        - `id` (integer): The unique identifier for the user.\n            \n        - `role` (string): The role of the user within the application.\n            \n\n**Example Response:**\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"token\": \"your_token_here\",\n    \"user\": {\n      \"email\": \"user@example.com\",\n      \"id\": 1,\n      \"role\": \"admin\"\n    }\n  }\n}\n\n ```"
							},
							"response": [
								{
									"name": "error ( pass invalid)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0NzE0ODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.tXt01WQuZ-MvYqnOiF4O7zUm42s2toipE57I9kBQwPM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"vuxuanhiep1709@gmail.com\",\r\n    \"password\": \"2345678\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/login",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:36:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "47"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"password is invalid\"\n}"
								},
								{
									"name": "error (email invalid)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0NzE0ODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.tXt01WQuZ-MvYqnOiF4O7zUm42s2toipE57I9kBQwPM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"vuxuanhi1709@gmail.com\",\r\n    \"password\": \"2345678\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/login",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:39:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "44"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"email is invalid\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0NzE0ODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.tXt01WQuZ-MvYqnOiF4O7zUm42s2toipE57I9kBQwPM",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"vuxuanhiep1709@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/login",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:40:15 GMT"
										},
										{
											"key": "Content-Length",
											"value": "246"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4\",\n        \"user\": {\n            \"email\": \"vuxuanhiep1709@gmail.com\",\n            \"id\": 8,\n            \"role\": \"client\"\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "profile",
					"item": [
						{
							"name": "get me",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/users/me",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"me"
									]
								},
								"description": "## Get User Information\n\nThis endpoint retrieves the information of the currently authenticated user.\n\n### Request\n\n- **Method**: `GET`\n    \n- **Endpoint**: `localhost:9090/users/me`\n    \n\n### Response\n\nThe response will return a JSON object containing the following fields:\n\n- **success**: A boolean indicating whether the request was successful.\n    \n- **data**: An object containing user details:\n    \n    - **email**: The email address of the user (string).\n        \n    - **id**: The unique identifier of the user (integer).\n        \n    - **role**: The role assigned to the user (string).\n        \n    - **username**: The username of the user (string).\n        \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"email\": \"\",\n    \"id\": 0,\n    \"role\": \"\",\n    \"username\": \"\"\n  }\n}\n\n ```\n\nThis endpoint does not require any request parameters and provides a structured response to give insight into the user's account details."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/me",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:41:19 GMT"
										},
										{
											"key": "Content-Length",
											"value": "103"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"email\": \"vuxuanhiep1709@gmail.com\",\n        \"id\": 8,\n        \"role\": \"client\",\n        \"username\": \"hiep03\"\n    }\n}"
								},
								{
									"name": "unauthorization",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/me",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:52:22 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								}
							]
						},
						{
							"name": "delete me",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1MjM5MTksInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo5fQ.zwB_D2xIYhgq-ioyd1pchG93j_WvMQbcku_WMRXL010",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:9090/users/me",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"me"
									]
								},
								"description": "## DELETE /users/me\n\nThis endpoint is used to delete the current user's account from the system. It allows users to remove their personal data and associated information securely.\n\n### Request Body\n\nThis endpoint does not require a request body. Simply send the DELETE request to the specified endpoint.\n\n### Response Structure\n\nUpon a successful deletion, the response will be in JSON format with the following structure:\n\n- **success** (boolean): Indicates whether the deletion was successful.\n    \n- **data** (object): Contains additional information about the operation.\n    \n    - **message** (string): A message confirming the deletion. This may be an empty string.\n        \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\nIn case of an unsuccessful deletion, the response will follow a similar structure but will indicate the failure in the `success` field and may provide an error message in the `data` object."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1MjM5MTksInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo5fQ.zwB_D2xIYhgq-ioyd1pchG93j_WvMQbcku_WMRXL010",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/users/me",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 16:40:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"User deleted successfully\"\n    }\n}"
								},
								{
									"name": "unauthorization",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/users/me",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 16:40:26 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								}
							]
						},
						{
							"name": "change password",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"old_password\": \"123456\",\r\n    \"new_password\": \"234567\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/users/change-password",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"users",
										"change-password"
									]
								},
								"description": "### Change Password API\n\nThis endpoint allows users to change their account password. It requires the user to provide their current password and the new password they wish to set.\n\n#### Request\n\n- **Method**: POST\n    \n- **URL**: `localhost:9090/users/change-password`\n    \n\n#### Request Body\n\nThe request body must be in JSON format and include the following parameters:\n\n- **old_password** (string): The current password of the user.\n    \n- **new_password** (string): The new password that the user wants to set.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"old_password\": \"123456\",\n  \"new_password\": \"234567\"\n}\n\n ```\n\n#### Response\n\nThe response will be in JSON format and will indicate whether the password change was successful. The structure of the response is as follows:\n\n- **success** (boolean): Indicates if the password change was successful.\n    \n- **data** (object): Contains additional information about the request.\n    \n    - **message** (string): A message related to the password change operation (may be empty).\n        \n\n**Example Response:**\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\nMake sure to handle errors appropriately, as a failure to provide the correct old password or a weak new password may result in an unsuccessful response."
							},
							"response": [
								{
									"name": "error (unauthrzation)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"old_password\": \"123456\",\r\n    \"new_password\": \"234567\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/change-password",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"change-password"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 04:55:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (validate)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"old_password\": \"1234\",\r\n    \"new_password\": \"234\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/change-password",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"change-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:12:29 GMT"
										},
										{
											"key": "Content-Length",
											"value": "70"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"NewPassword must be at least 6 characters.\"\n}"
								},
								{
									"name": "error (empty input)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"old_password\": \"\",\r\n    \"new_password\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/change-password",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"change-password"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:14:27 GMT"
										},
										{
											"key": "Content-Length",
											"value": "77"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"OldPassword is required. NewPassword is required.\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODA4MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.aQQxNlEEDQFCrGka3NeNXQy6zQcXe2vkYte1d3Rg-n4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"old_password\": \"123456\",\r\n    \"new_password\": \"234567\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/users/change-password",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"users",
												"change-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:15:08 GMT"
										},
										{
											"key": "Content-Length",
											"value": "67"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Password changed successfully\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "get list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9090/categories",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"categories"
									]
								},
								"description": "## Get Categories\n\nThis endpoint retrieves a list of categories available in the system. It is a simple GET request that does not require any request body or parameters.\n\n### Request\n\n- **Method**: GET\n    \n- **URL**: `http://localhost:9090/categories`\n    \n\n### Response\n\nThe response will be in JSON format and contains the following structure:\n\n- **success** (boolean): Indicates whether the request was successful.\n    \n- **data** (array): An array of category objects, each containing:\n    \n    - **id** (integer): The unique identifier for the category.\n        \n    - **name** (string): The name of the category.\n        \n    - **slug** (string): A URL-friendly version of the category name.\n        \n\n#### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"slug\": \"\"\n    }\n  ]\n}\n\n ```\n\n### Notes\n\n- The `data` array may contain multiple category objects or be empty if no categories are available.\n    \n- Ensure to handle cases where the `success` field is false, which may indicate an error in the request."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:9090/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"categories"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 03:15:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "185"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 2,\n            \"name\": \"Lập trình\",\n            \"slug\": \"lap-trinh\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"Đời sống\",\n            \"slug\": \"doi-song\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"Công nghệ\",\n            \"slug\": \"kien-thuc-cong-nghe\"\n        }\n    ]\n}"
								},
								{
									"name": "error (not found ID)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:9090/categories/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"categories",
												"2"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 03:33:14 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Endpoint not found\"\n}"
								},
								{
									"name": "error (could not fetch DB/table)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "localhost:9090/categories",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"categories"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 03:43:01 GMT"
										},
										{
											"key": "Content-Length",
											"value": "54"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Could not fetch categories\"\n}\n\n// Lỗi khi bảng bị đổi tên trong DB"
								}
							]
						}
					]
				},
				{
					"name": "posts",
					"item": [
						{
							"name": "create",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Lập trình Ruby phần 3\",\r\n    \"slug\": \"lap-trinh-ruby-phan-3\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/posts/",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts",
										""
									]
								},
								"description": "## Add Post\n\nThis endpoint allows users to create a new post by submitting relevant details. The request should be sent as a JSON object in the body of the POST request.\n\n### Request Body Parameters\n\n- **title** (string): The title of the post. This should be a descriptive and concise title.\n    \n- **slug** (string): A URL-friendly version of the title, typically used for the post's URL.\n    \n- **content** (string): The main content of the post, which can include text, images, and other media.\n    \n- **thumbnail** (string): A URL pointing to the thumbnail image associated with the post.\n    \n- **category_id** (integer): The ID of the category to which the post belongs. This should correspond to an existing category in the system.\n    \n- **status** (string): The status of the post, which can be \"published\", \"draft\", or other relevant states.\n    \n\n### Expected Response\n\nUpon a successful request, the response will contain a JSON object indicating the success of the operation. The structure of the response is as follows:\n\n- **success** (boolean): Indicates whether the post was successfully created.\n    \n- **data** (object): Contains additional information about the operation. In this case, it includes a message, which may be empty.\n    \n\n### Notes\n\n- Ensure that all required fields are provided in the request body.\n    \n- The `category_id` must correspond to a valid category in the system to avoid errors.\n    \n- The `status` field should be set according to the desired visibility of the post."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby\",\r\n    \"slug\": \"lap-trinh-ruby\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 17:08:25 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Post created successfully\"\n    }\n}"
								},
								{
									"name": "error (not found category)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby\",\r\n    \"slug\": \"lap-trinh-ruby\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 3,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 17:08:53 GMT"
										},
										{
											"key": "Content-Length",
											"value": "51"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"category does not exist\"\n}"
								},
								{
									"name": "error (slug required)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby phần 2\",\r\n    \"slug\": \"\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:12:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "120"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'CreatePostRequest.Slug' Error:Field validation for 'Slug' failed on the 'required' tag\"\n}"
								},
								{
									"name": "error  (title required)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"\",\r\n    \"slug\": \"lap-trinh-ruby-phan-2\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:12:58 GMT"
										},
										{
											"key": "Content-Length",
											"value": "122"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'CreatePostRequest.Title' Error:Field validation for 'Title' failed on the 'required' tag\"\n}"
								},
								{
									"name": "error (content required)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovIC-lCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby phần 2\",\r\n    \"slug\": \"lap-trinh-ruby-phan-2\",\r\n    \"content\": \"\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:13:39 GMT"
										},
										{
											"key": "Content-Length",
											"value": "126"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Key: 'CreatePostRequest.Content' Error:Field validation for 'Content' failed on the 'required' tag\"\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby phần 2\",\r\n    \"slug\": \"lap-trinh-ruby-phan-2\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:14:50 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0ODc0NTksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.sovlCHSj73w6z1OH6RJCTLdKRzG6SAsivO_WmSr4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Lập trình Ruby phần 2\",\r\n    \"slug\": \"lap-trinh-ruby-phan-2\",\r\n    \"content\": \"Cách lập trình ruby\",\r\n    \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\r\n    \"category_id\": 2,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												""
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:15:25 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid token\"\n}"
								}
							]
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjI1MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.HypSDlze9jYFsRM1oTLRoUMNp0OSAIQIwmAyw1FuEN8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/posts/17",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts",
										"17"
									]
								},
								"description": "### Update Post\n\nThis endpoint allows you to update an existing post by its ID. The request is made to the specified URL, where you need to provide the post ID in the URL path.\n\n#### Request Parameters\n\nThe request body must be in JSON format and include the following parameters:\n\n- **title** (string): The title of the post.\n    \n- **slug** (string): A URL-friendly version of the title, typically used for SEO purposes.\n    \n- **content** (string): The main content of the post.\n    \n- **thumbnail** (string): A URL pointing to the thumbnail image associated with the post.\n    \n- **category_id** (integer): The ID of the category to which the post belongs.\n    \n- **status** (string): The publication status of the post (e.g., \"published\", \"draft\").\n    \n\n#### Example Request Body\n\n``` json\n{\n  \"title\": \"Hướng dẫn sử dụng Golang với G ...\",\n  \"slug\": \"huong-dan-golang-gin\",\n  \"content\": \"Đây là nội dung chi tiết về cá ...\",\n  \"thumbnail\": \"https://example.com/images/gol ...\",\n  \"category_id\": 1,\n  \"status\": \"published\"\n}\n\n ```\n\n#### Expected Response\n\nUpon a successful update, the API will return a JSON response with the following structure:\n\n- **success** (boolean): Indicates whether the update was successful.\n    \n- **data** (object): Contains additional information about the operation.\n    \n    - **message** (string): A message related to the update operation (may be empty).\n        \n\n#### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n#### Notes\n\n- Ensure that the post ID in the URL corresponds to an existing post; otherwise, the update will fail.\n    \n- All fields in the request body are required for a successful update."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MTQwMzksInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.KZim1ZWJCDP_0qf0DmkYL66F1aOu7gT2HReEpsaY6lE",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/4",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"4"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:17:25 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Post updated successfully\"\n    }\n}"
								},
								{
									"name": "error (not post owner)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjI1MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.HypSDlze9jYFsRM1oTLRoUMNp0OSAIQIwmAyw1FuEN8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/4",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"4"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:22:23 GMT"
										},
										{
											"key": "Content-Length",
											"value": "83"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"You do not have permission to edit or delete this post.\"\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/4",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"4"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:23:12 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								},
								{
									"name": "error (invalid token)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.HypSDlze9jYFsRM1oTLRoUMNp0OSAIQIwmAyw1FuEN8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/4",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"4"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:23:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "41"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid token\"\n}"
								},
								{
									"name": "error (invalid post id)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjI1MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.HypSDlze9jYFsRM1oTLRoUMNp0OSAIQIwmAyw1FuEN8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/hd",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"hd"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:24:43 GMT"
										},
										{
											"key": "Content-Length",
											"value": "43"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid post id\"\n}"
								},
								{
									"name": "error (post not found)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjI1MTUsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.HypSDlze9jYFsRM1oTLRoUMNp0OSAIQIwmAyw1FuEN8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"title\": \"Hướng dẫn sử dụng Golang với Gin.\",\r\n  \"slug\": \"huong-dan-golang-gin\",\r\n  \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\r\n  \"thumbnail\": \"https://example.com/images/golang-gin.png\",\r\n  \"category_id\": 1,\r\n  \"status\": \"published\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/10000",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"10000"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:25:09 GMT"
										},
										{
											"key": "Content-Length",
											"value": "42"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Post not found\"\n}"
								}
							]
						},
						{
							"name": "delete",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/posts/21",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts",
										"21"
									]
								},
								"description": "## DELETE /posts/{id}\n\nThis endpoint is used to delete a specific post identified by its unique ID. In this case, the ID of the post to be deleted is provided in the URL path.\n\n### Request Parameters\n\n- **id** (path parameter): The unique identifier of the post that you wish to delete. In the example provided, the ID is `21`.\n    \n\n### Expected Response\n\nUpon successful deletion of the post, the API will return a JSON object containing:\n\n- **success** (boolean): Indicates whether the deletion was successful.\n    \n- **data** (object): Contains a message regarding the deletion status. In this case, it may return an empty message.\n    \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the ID provided corresponds to an existing post; otherwise, the deletion may fail.\n    \n- The response will confirm the success of the operation, but may not provide additional details in the message field."
							},
							"response": [
								{
									"name": "error (not perrmission)",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0OTM2MDAsInJvbGUiOiJjbGllbnQiLCJ1c2VyX2lkIjo4fQ.Jj22qyEnKYKEo_5zDCWV_2Z7ByLDTrxcSNcKfJpbB_4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/2",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"2"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 08:23:48 GMT"
										},
										{
											"key": "Content-Length",
											"value": "72"
										}
									],
									"cookie": [],
									"body": "{\n    \"error\": \"Bạn không có quyền sửa hoặc xóa bài viết này.\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/21",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"21"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:31:56 GMT"
										},
										{
											"key": "Content-Length",
											"value": "63"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Post deleted successfully\"\n    }\n}"
								}
							]
						},
						{
							"name": "get all",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `\r",
											"<style type=\"text/css\">\r",
											"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
											"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
											"    .tftable tr {background-color:#ffffff;}\r",
											"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
											"    .tftable tr:hover {background-color:#e0ffff;}\r",
											"</style>\r",
											"\r",
											"<table class=\"tftable\" border=\"1\">\r",
											"    <tr>\r",
											"        <th>ID</th>\r",
											"        <th>Title</th>\r",
											"        <th>Slug</th>\r",
											"        <th>Content</th>\r",
											"        <th>Thumbnail</th>\r",
											"        <th>Category ID</th>\r",
											"        <th>Category</th>\r",
											"        <th>Author ID</th>\r",
											"        <th>Author</th>\r",
											"        <th>Status</th>\r",
											"        <th>Created At</th>\r",
											"        <th>Updated At</th>\r",
											"    </tr>\r",
											"    \r",
											"    {{#each response.data}}\r",
											"        <tr id=row_{{@key}}>\r",
											"            <td>{{id}}</td>\r",
											"            <td>{{title}}</td>\r",
											"            <td>{{slug}}</td>\r",
											"            <td>{{content}}</td>\r",
											"            <td>{{thumbnail}}</td>\r",
											"            <td>{{category_id}}</td>\r",
											"            <td>{{category}}</td>\r",
											"            <td>{{author_id}}</td>\r",
											"            <td>{{author}}</td>\r",
											"            <td>{{status}}</td>\r",
											"            <td>{{created_at}}</td>\r",
											"            <td>{{updated_at}}</td>\r",
											"        </tr>\r",
											"    {{/each}}\r",
											"</table>\r",
											"`;\r",
											"\r",
											"function constructVisualizerPayload() {\r",
											"    var res = pm.response.json();\r",
											"    \r",
											"    // If data is null, return an empty array for visualization\r",
											"    var visualizerData = res.data || [];\r",
											"    return {response: {data: visualizerData}};\r",
											"}\r",
											"\r",
											"pm.visualizer.set(template, constructVisualizerPayload());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:9090/posts",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts"
									]
								},
								"description": "## API Endpoint: Get Posts\n\n### Request Method\n\n`GET`\n\n### Endpoint\n\n`localhost:9090/posts`\n\n### Description\n\nThis endpoint retrieves a list of posts from the server. It does not require any query parameters or request body.\n\n### Expected Response\n\nThe response will be in JSON format and will include the following structure:\n\n- **success**: A boolean indicating the success of the request.\n    \n- **data**: An object containing:\n    \n    - **data**: An array of post objects, each containing:\n        \n        - **id**: The unique identifier for the post.\n            \n        - **title**: The title of the post.\n            \n        - **slug**: A URL-friendly string derived from the title.\n            \n        - **content**: The main content of the post.\n            \n        - **thumbnail**: A URL to the post's thumbnail image.\n            \n        - **category_id**: The identifier for the category the post belongs to.\n            \n        - **category**: The name of the category.\n            \n        - **author_id**: The identifier for the author of the post.\n            \n        - **author**: The name of the author.\n            \n        - **status**: The current status of the post (e.g., published, draft).\n            \n        - **created_at**: Timestamp of when the post was created.\n            \n        - **updated_at**: Timestamp of when the post was last updated.\n            \n    - **message**: A message related to the request (if any).\n        \n    - **page**: The current page number of the results.\n        \n    - **page_size**: The number of items per page.\n        \n    - **total**: The total number of posts available.\n        \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"data\": [\n      {\n        \"id\": 0,\n        \"title\": \"\",\n        \"slug\": \"\",\n        \"content\": \"\",\n        \"thumbnail\": \"\",\n        \"category_id\": 0,\n        \"category\": \"\",\n        \"author_id\": 0,\n        \"author\": \"\",\n        \"status\": \"\",\n        \"created_at\": \"\",\n        \"updated_at\": \"\"\n      }\n    ],\n    \"message\": \"\",\n    \"page\": 0,\n    \"page_size\": 0,\n    \"success\": true,\n    \"total\": 0\n  }\n}\n\n ```"
							},
							"response": [
								{
									"name": "success (page)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:49:55 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "// Case default: trả về danh sách tất cả bài viết, mặc định page=1, page_size=10.\n{\n    \"data\": [\n        {\n            \"id\": 18,\n            \"title\": \"Quản lý migration với GORM\",\n            \"slug\": \"quan-ly-migration-voi-gorm\",\n            \"content\": \"Cách sử dụng migration trong GORM để quản lý schema.\",\n            \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:33:17\",\n            \"updated_at\": \"2025-06-18 13:33:17\"\n        },\n        {\n            \"id\": 17,\n            \"title\": \"Tối ưu hóa tốc độ API\",\n            \"slug\": \"toi-uu-hoa-toc-do-api\",\n            \"content\": \"Các mẹo tối ưu hóa tốc độ phản hồi của API.\",\n            \"thumbnail\": \"https://picsum.photos/seed/14/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:33:01\",\n            \"updated_at\": \"2025-06-18 13:33:01\"\n        },\n        {\n            \"id\": 16,\n            \"title\": \"Xây dựng hệ thống phân quyền\",\n            \"slug\": \"xay-dung-he-thong-phan-quyen\",\n            \"content\": \"Thiết kế hệ thống phân quyền cho ứng dụng web.\",\n            \"thumbnail\": \"https://picsum.photos/seed/13/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:43\",\n            \"updated_at\": \"2025-06-18 13:32:43\"\n        },\n        {\n            \"id\": 15,\n            \"title\": \"Unit Test trong Golang\",\n            \"slug\": \"unit-test-trong-golang\",\n            \"content\": \"Viết và chạy unit test trong dự án Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/12/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:28\",\n            \"updated_at\": \"2025-06-18 13:32:28\"\n        },\n        {\n            \"id\": 14,\n            \"title\": \"Sử dụng Docker cho phát triển Go\",\n            \"slug\": \"su-dung-docker-cho-phat-trien-go\",\n            \"content\": \"Cách đóng gói và triển khai ứng dụng Go với Docker.\",\n            \"thumbnail\": \"https://picsum.photos/seed/11/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:12\",\n            \"updated_at\": \"2025-06-18 13:32:12\"\n        },\n        {\n            \"id\": 13,\n            \"title\": \"Quản lý session trong web app\",\n            \"slug\": \"quan-ly-session-trong-web-app\",\n            \"content\": \"Các kỹ thuật quản lý session trong ứng dụng web.\",\n            \"thumbnail\": \"https://picsum.photos/seed/10/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:01\",\n            \"updated_at\": \"2025-06-18 13:32:01\"\n        },\n        {\n            \"id\": 12,\n            \"title\": \"Tạo API CRUD với Gin\",\n            \"slug\": \"tao-api-crud-voi-gin\",\n            \"content\": \"Hướng dẫn xây dựng API CRUD đơn giản với Gin.\",\n            \"thumbnail\": \"https://picsum.photos/seed/9/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:51\",\n            \"updated_at\": \"2025-06-18 13:31:51\"\n        },\n        {\n            \"id\": 11,\n            \"title\": \"Xử lý lỗi trong Golang\",\n            \"slug\": \"xu-ly-loi-trong-golang\",\n            \"content\": \"Các phương pháp xử lý lỗi phổ biến trong Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/8/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:28\",\n            \"updated_at\": \"2025-06-18 13:31:28\"\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Middleware trong Gin\",\n            \"slug\": \"middleware-trong-gin\",\n            \"content\": \"Giới thiệu về middleware và cách sử dụng trong Gin framework.\",\n            \"thumbnail\": \"https://picsum.photos/seed/7/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:19\",\n            \"updated_at\": \"2025-06-18 13:30:19\"\n        },\n        {\n            \"id\": 9,\n            \"title\": \"Tối ưu hóa truy vấn SQL\",\n            \"slug\": \"toi-uu-hoa-truy-van-sql\",\n            \"content\": \"Các kỹ thuật tối ưu hóa truy vấn SQL hiệu quả.\",\n            \"thumbnail\": \"https://picsum.photos/seed/6/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:09\",\n            \"updated_at\": \"2025-06-18 13:30:09\"\n        }\n    ],\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 16\n}"
								},
								{
									"name": "success (page + page_size)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?page=2&page_size=5",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "page",
													"value": "2"
												},
												{
													"key": "page_size",
													"value": "5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:52:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1921"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 13,\n            \"title\": \"Quản lý session trong web app\",\n            \"slug\": \"quan-ly-session-trong-web-app\",\n            \"content\": \"Các kỹ thuật quản lý session trong ứng dụng web.\",\n            \"thumbnail\": \"https://picsum.photos/seed/10/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:01\",\n            \"updated_at\": \"2025-06-18 13:32:01\"\n        },\n        {\n            \"id\": 12,\n            \"title\": \"Tạo API CRUD với Gin\",\n            \"slug\": \"tao-api-crud-voi-gin\",\n            \"content\": \"Hướng dẫn xây dựng API CRUD đơn giản với Gin.\",\n            \"thumbnail\": \"https://picsum.photos/seed/9/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:51\",\n            \"updated_at\": \"2025-06-18 13:31:51\"\n        },\n        {\n            \"id\": 11,\n            \"title\": \"Xử lý lỗi trong Golang\",\n            \"slug\": \"xu-ly-loi-trong-golang\",\n            \"content\": \"Các phương pháp xử lý lỗi phổ biến trong Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/8/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:28\",\n            \"updated_at\": \"2025-06-18 13:31:28\"\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Middleware trong Gin\",\n            \"slug\": \"middleware-trong-gin\",\n            \"content\": \"Giới thiệu về middleware và cách sử dụng trong Gin framework.\",\n            \"thumbnail\": \"https://picsum.photos/seed/7/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:19\",\n            \"updated_at\": \"2025-06-18 13:30:19\"\n        },\n        {\n            \"id\": 9,\n            \"title\": \"Tối ưu hóa truy vấn SQL\",\n            \"slug\": \"toi-uu-hoa-truy-van-sql\",\n            \"content\": \"Các kỹ thuật tối ưu hóa truy vấn SQL hiệu quả.\",\n            \"thumbnail\": \"https://picsum.photos/seed/6/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:09\",\n            \"updated_at\": \"2025-06-18 13:30:09\"\n        }\n    ],\n    \"page\": 2,\n    \"page_size\": 5,\n    \"success\": true,\n    \"total\": 16\n}"
								},
								{
									"name": "success (search)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?title=golang",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "title",
													"value": "golang"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 06:53:47 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1191"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 15,\n            \"title\": \"Unit Test trong Golang\",\n            \"slug\": \"unit-test-trong-golang\",\n            \"content\": \"Viết và chạy unit test trong dự án Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/12/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:28\",\n            \"updated_at\": \"2025-06-18 13:32:28\"\n        },\n        {\n            \"id\": 11,\n            \"title\": \"Xử lý lỗi trong Golang\",\n            \"slug\": \"xu-ly-loi-trong-golang\",\n            \"content\": \"Các phương pháp xử lý lỗi phổ biến trong Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/8/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:28\",\n            \"updated_at\": \"2025-06-18 13:31:28\"\n        },\n        {\n            \"id\": 4,\n            \"title\": \"Hướng dẫn sử dụng Golang với Gin\",\n            \"slug\": \"huong-dan-golang-gin\",\n            \"content\": \"Đây là nội dung chi tiết về cách sử dụng Golang với Gin framework.\",\n            \"thumbnail\": \"https://example.com/images/golang-gin.png\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-17 17:01:10\",\n            \"updated_at\": \"2025-06-17 17:07:46\"\n        }\n    ],\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 3\n}"
								},
								{
									"name": "not found articles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?author=hiep03&category=kien-thuc-cong-nghe&title=Golang",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "author",
													"value": "hiep03"
												},
												{
													"key": "category",
													"value": "kien-thuc-cong-nghe"
												},
												{
													"key": "title",
													"value": "Golang"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:09:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": null,\n    \"message\": \"No matching articles found.\",\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 0\n}"
								},
								{
									"name": "page/page_size invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?page=avc",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "page",
													"value": "avc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:11:54 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": 18,\n            \"title\": \"Quản lý migration với GORM\",\n            \"slug\": \"quan-ly-migration-voi-gorm\",\n            \"content\": \"Cách sử dụng migration trong GORM để quản lý schema.\",\n            \"thumbnail\": \"https://picsum.photos/seed/16/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:33:17\",\n            \"updated_at\": \"2025-06-18 13:33:17\"\n        },\n        {\n            \"id\": 17,\n            \"title\": \"Tối ưu hóa tốc độ API\",\n            \"slug\": \"toi-uu-hoa-toc-do-api\",\n            \"content\": \"Các mẹo tối ưu hóa tốc độ phản hồi của API.\",\n            \"thumbnail\": \"https://picsum.photos/seed/14/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:33:01\",\n            \"updated_at\": \"2025-06-18 13:33:01\"\n        },\n        {\n            \"id\": 16,\n            \"title\": \"Xây dựng hệ thống phân quyền\",\n            \"slug\": \"xay-dung-he-thong-phan-quyen\",\n            \"content\": \"Thiết kế hệ thống phân quyền cho ứng dụng web.\",\n            \"thumbnail\": \"https://picsum.photos/seed/13/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:43\",\n            \"updated_at\": \"2025-06-18 13:32:43\"\n        },\n        {\n            \"id\": 15,\n            \"title\": \"Unit Test trong Golang\",\n            \"slug\": \"unit-test-trong-golang\",\n            \"content\": \"Viết và chạy unit test trong dự án Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/12/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:28\",\n            \"updated_at\": \"2025-06-18 13:32:28\"\n        },\n        {\n            \"id\": 14,\n            \"title\": \"Sử dụng Docker cho phát triển Go\",\n            \"slug\": \"su-dung-docker-cho-phat-trien-go\",\n            \"content\": \"Cách đóng gói và triển khai ứng dụng Go với Docker.\",\n            \"thumbnail\": \"https://picsum.photos/seed/11/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:12\",\n            \"updated_at\": \"2025-06-18 13:32:12\"\n        },\n        {\n            \"id\": 13,\n            \"title\": \"Quản lý session trong web app\",\n            \"slug\": \"quan-ly-session-trong-web-app\",\n            \"content\": \"Các kỹ thuật quản lý session trong ứng dụng web.\",\n            \"thumbnail\": \"https://picsum.photos/seed/10/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:32:01\",\n            \"updated_at\": \"2025-06-18 13:32:01\"\n        },\n        {\n            \"id\": 12,\n            \"title\": \"Tạo API CRUD với Gin\",\n            \"slug\": \"tao-api-crud-voi-gin\",\n            \"content\": \"Hướng dẫn xây dựng API CRUD đơn giản với Gin.\",\n            \"thumbnail\": \"https://picsum.photos/seed/9/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:51\",\n            \"updated_at\": \"2025-06-18 13:31:51\"\n        },\n        {\n            \"id\": 11,\n            \"title\": \"Xử lý lỗi trong Golang\",\n            \"slug\": \"xu-ly-loi-trong-golang\",\n            \"content\": \"Các phương pháp xử lý lỗi phổ biến trong Go.\",\n            \"thumbnail\": \"https://picsum.photos/seed/8/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 4,\n            \"author\": \"testuser\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:31:28\",\n            \"updated_at\": \"2025-06-18 13:31:28\"\n        },\n        {\n            \"id\": 10,\n            \"title\": \"Middleware trong Gin\",\n            \"slug\": \"middleware-trong-gin\",\n            \"content\": \"Giới thiệu về middleware và cách sử dụng trong Gin framework.\",\n            \"thumbnail\": \"https://picsum.photos/seed/7/400/200\",\n            \"category_id\": 1,\n            \"category\": \"Công nghệ\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:19\",\n            \"updated_at\": \"2025-06-18 13:30:19\"\n        },\n        {\n            \"id\": 9,\n            \"title\": \"Tối ưu hóa truy vấn SQL\",\n            \"slug\": \"toi-uu-hoa-truy-van-sql\",\n            \"content\": \"Các kỹ thuật tối ưu hóa truy vấn SQL hiệu quả.\",\n            \"thumbnail\": \"https://picsum.photos/seed/6/400/200\",\n            \"category_id\": 2,\n            \"category\": \"Lập trình\",\n            \"author_id\": 8,\n            \"author\": \"hiep03\",\n            \"status\": \"published\",\n            \"created_at\": \"2025-06-18 13:30:09\",\n            \"updated_at\": \"2025-06-18 13:30:09\"\n        }\n    ],\n    \"message\": \"Search success.\",\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 16\n}"
								},
								{
									"name": "category invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?category=noôasd",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "category",
													"value": "noôasd"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:14:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": null,\n    \"message\": \"No matching articles found.\",\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 0\n}"
								},
								{
									"name": "title invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?title=khongtontai",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "title",
													"value": "khongtontai"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:15:42 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": null,\n    \"message\": \"No matching articles found.\",\n    \"page\": 1,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 0\n}"
								},
								{
									"name": "exceed total pages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts?page=9999",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											],
											"query": [
												{
													"key": "page",
													"value": "9999"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:16:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "94"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": null,\n    \"message\": \"Search success.\",\n    \"page\": 9999,\n    \"page_size\": 10,\n    \"success\": true,\n    \"total\": 16\n}"
								},
								{
									"name": "server error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "localhost:9090/posts",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 07:21:47 GMT"
										},
										{
											"key": "Content-Length",
											"value": "49"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Could not fetch posts\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "comment",
					"item": [
						{
							"name": "up comment",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"content\": \"Bài viết rất hay, cảm ơn bạn đã chia sẻ!\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/posts/11/comments",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts",
										"11",
										"comments"
									]
								},
								"description": "### Add Comment to Post\n\nThis endpoint allows users to add a comment to a specific post identified by its ID. The comment content is submitted in the request body.\n\n#### Request\n\n- **Method**: POST\n    \n- **URL**: `localhost:9090/posts/{postId}/comments`\n    \n- **Request Body** (JSON):\n    \n    - `content` (string): The text of the comment being added to the post. This parameter is required.\n        \n\n#### Example Request Body\n\n``` json\n{\n  \"content\": \"Bài viết rất hay, cảm ơn bạn đ ...\"\n}\n\n ```\n\n#### Response\n\nUpon successful addition of the comment, the API will return a JSON response indicating the success of the operation.\n\n- **Response Format**:\n    \n    - `success` (boolean): Indicates whether the comment was successfully added.\n        \n    - `data` (object): Contains additional information about the operation.\n        \n        - `message` (string): A message related to the success or failure of the operation.\n            \n\n#### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n#### Notes\n\n- Ensure that the `content` parameter is not empty when submitting a comment.\n    \n- The endpoint will return an error response if the comment cannot be added for any reason (e.g., invalid post ID)."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Bài viết rất hay, cảm ơn bạn đã chia sẻ!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/10/comments",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"10",
												"comments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:46:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "66"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Comment created successfully\"\n    }\n}"
								},
								{
									"name": "error (invalid comment id)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Bài viết rất hay, cảm ơn bạn đã chia sẻ!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/ed/comments",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"ed",
												"comments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:46:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "43"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid post id\"\n}"
								},
								{
									"name": "error (unauthorization)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Bài viết rất hay, cảm ơn bạn đã chia sẻ!\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/ed/comments",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"ed",
												"comments"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:47:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "57"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Authorization header required\"\n}"
								}
							]
						},
						{
							"name": "update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9090/comments/9",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"comments",
										"9"
									]
								},
								"description": "## Update Comment\n\nThis endpoint allows you to update an existing comment identified by its unique ID. In this case, the comment with ID `9` is being updated with new content.\n\n### Request\n\n- **Method**: PUT\n    \n- **URL**: `http://localhost:9090/comments/9`\n    \n- **Request Body**: The request body must be in JSON format and include the following parameter:\n    \n    - `content` (string): The new content for the comment. This is a required field.\n        \n\n#### Example Request Body\n\n``` json\n{\n  \"content\": \"Nội dung comment mới\"\n}\n\n ```\n\n### Response\n\nUpon a successful update, the API will respond with a JSON object containing the following structure:\n\n- `success` (boolean): Indicates whether the update operation was successful.\n    \n- `data` (object): Contains additional information about the operation.\n    \n    - `message` (string): A message related to the operation (may be empty).\n        \n\n#### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"message\": \"\"\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the comment ID in the URL corresponds to an existing comment for the update to be successful.\n    \n- The response will provide feedback on the success of the operation, allowing the client to handle the result accordingly."
							},
							"response": [
								{
									"name": "error (endpoint not found)",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/posts/comments/9",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"comments",
												"9"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:50:11 GMT"
										},
										{
											"key": "Content-Length",
											"value": "46"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Endpoint not found\"\n}"
								},
								{
									"name": "success",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA1NjMwODcsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.K8G5ZJHPlwXsU_5oHKQOUqjgHbD1PyRegMA1PDJFfs8",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "localhost:9090/comments/9",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"comments",
												"9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 19 Jun 2025 03:50:52 GMT"
										},
										{
											"key": "Content-Length",
											"value": "66"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Comment updated successfully\"\n    }\n}"
								}
							]
						},
						{
							"name": "get comments in post",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MzIzMTQsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.RckYgrZBDbQSrB7JyBUQ526Q9nVUWYX4J3UeNLEw2Fg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}"
								},
								"url": {
									"raw": "localhost:9090/posts/2/comments",
									"host": [
										"localhost"
									],
									"port": "9090",
									"path": [
										"posts",
										"2",
										"comments"
									]
								},
								"description": "## Get Comments for a Post\n\nThis endpoint retrieves comments associated with a specific post identified by its ID. In this case, the post ID is `2`.\n\n### Request\n\n- **Method**: GET\n    \n- **URL**: `localhost:9090/posts/2/comments`\n    \n\n### Request Body\n\nAlthough this is a GET request, the last call included a payload with the following structure:\n\n``` json\n{\n  \"content\": \"Nội dung comment mới\"\n}\n\n ```\n\n- **Parameters**:\n    \n    - `content` (string): The content of the comment to be added. This parameter is not typically included in a GET request but may be relevant for context.\n        \n\n### Response\n\nThe expected response is a JSON object that indicates the success of the request and provides the details of the comments.\n\n#### Response Structure\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"comments\": [\n      {\n        \"id\": 0,\n        \"post_id\": 0,\n        \"user_id\": 0,\n        \"content\": \"\",\n        \"created_at\": \"\",\n        \"updated_at\": \"\"\n      }\n    ],\n    \"page\": 0,\n    \"page_size\": 0,\n    \"total\": 0\n  }\n}\n\n ```\n\n- **Fields**:\n    \n    - `success` (boolean): Indicates whether the request was successful.\n        \n    - `data` (object): Contains the following fields:\n        \n        - `comments` (array): An array of comment objects related to the post.\n            \n            - Each comment object includes:\n                \n                - `id` (integer): The unique identifier of the comment.\n                    \n                - `post_id` (integer): The ID of the post to which the comment belongs.\n                    \n                - `user_id` (integer): The ID of the user who made the comment.\n                    \n                - `content` (string): The content of the comment.\n                    \n                - `created_at` (string): Timestamp of when the comment was created.\n                    \n                - `updated_at` (string): Timestamp of when the comment was last updated.\n                    \n        - `page` (integer): The current page of results.\n            \n        - `page_size` (integer): The number of results per page.\n            \n        - `total` (integer): The total number of comments available.\n            \n\n### Notes\n\n- Ensure that the post ID in the URL is valid and corresponds to an existing post to retrieve the associated comments successfully.\n    \n- The response will include pagination information, which can be useful for navigating through multiple comments if applicable."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MzIzMTQsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.RckYgrZBDbQSrB7JyBUQ526Q9nVUWYX4J3UeNLEw2Fg",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/posts/2/comments",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"2",
												"comments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 15:29:37 GMT"
										},
										{
											"key": "Content-Length",
											"value": "258"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"comments\": [\n            {\n                \"id\": 7,\n                \"post_id\": 2,\n                \"user_id\": 4,\n                \"content\": \"Bài viết rất hay, cảm ơn bạn đã chia sẻ!\",\n                \"created_at\": \"2025-06-17T22:18:57.752769Z\",\n                \"updated_at\": \"2025-06-17T22:18:57.752769Z\"\n            }\n        ],\n        \"page\": 1,\n        \"page_size\": 10,\n        \"total\": 1\n    }\n}"
								},
								{
									"name": "error (post id invalid)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTA0MzIzMTQsInJvbGUiOiJhZG1pbiIsInVzZXJfaWQiOjR9.RckYgrZBDbQSrB7JyBUQ526Q9nVUWYX4J3UeNLEw2Fg",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"content\": \"Nội dung comment mới\"\r\n}"
										},
										"url": {
											"raw": "localhost:9090/posts/a/comments",
											"host": [
												"localhost"
											],
											"port": "9090",
											"path": [
												"posts",
												"a",
												"comments"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Wed, 18 Jun 2025 15:39:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "43"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": false,\n    \"error\": \"Invalid post id\"\n}"
								}
							]
						}
					]
				}
			]
		}
	]
}